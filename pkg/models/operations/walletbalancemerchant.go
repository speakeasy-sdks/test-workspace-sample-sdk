// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type WalletbalanceMerchantRequestBody struct {
	MerchantID         *string `json:"merchantId,omitempty"`
	PartnerReferenceNo *string `json:"partnerReferenceNo,omitempty"`
}

func (o *WalletbalanceMerchantRequestBody) GetMerchantID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantID
}

func (o *WalletbalanceMerchantRequestBody) GetPartnerReferenceNo() *string {
	if o == nil {
		return nil
	}
	return o.PartnerReferenceNo
}

type WalletbalanceMerchantRequest struct {
	ChannelID   *string                           `header:"style=simple,explode=false,name=CHANNEL-ID"`
	RequestBody *WalletbalanceMerchantRequestBody `request:"mediaType=application/json"`
	XClientKey  *string                           `header:"style=simple,explode=false,name=X-CLIENT-KEY"`
	XExternalID *string                           `header:"style=simple,explode=false,name=X-EXTERNAL-ID"`
	XSignature  *string                           `header:"style=simple,explode=false,name=X-SIGNATURE"`
	XTimestamp  *string                           `header:"style=simple,explode=false,name=X-TIMESTAMP"`
}

func (o *WalletbalanceMerchantRequest) GetChannelID() *string {
	if o == nil {
		return nil
	}
	return o.ChannelID
}

func (o *WalletbalanceMerchantRequest) GetRequestBody() *WalletbalanceMerchantRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *WalletbalanceMerchantRequest) GetXClientKey() *string {
	if o == nil {
		return nil
	}
	return o.XClientKey
}

func (o *WalletbalanceMerchantRequest) GetXExternalID() *string {
	if o == nil {
		return nil
	}
	return o.XExternalID
}

func (o *WalletbalanceMerchantRequest) GetXSignature() *string {
	if o == nil {
		return nil
	}
	return o.XSignature
}

func (o *WalletbalanceMerchantRequest) GetXTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.XTimestamp
}

type WalletbalanceMerchantResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *WalletbalanceMerchantResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *WalletbalanceMerchantResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *WalletbalanceMerchantResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type OtpVerificationRequestBody struct {
	MerchantID         *string `json:"merchantId,omitempty"`
	Otp                *string `json:"otp,omitempty"`
	PartnerReferenceNo *string `json:"partnerReferenceNo,omitempty"`
	RegistrationToken  *string `json:"registrationToken,omitempty"`
}

func (o *OtpVerificationRequestBody) GetMerchantID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantID
}

func (o *OtpVerificationRequestBody) GetOtp() *string {
	if o == nil {
		return nil
	}
	return o.Otp
}

func (o *OtpVerificationRequestBody) GetPartnerReferenceNo() *string {
	if o == nil {
		return nil
	}
	return o.PartnerReferenceNo
}

func (o *OtpVerificationRequestBody) GetRegistrationToken() *string {
	if o == nil {
		return nil
	}
	return o.RegistrationToken
}

type OtpVerificationRequest struct {
	ChannelID   *string                     `header:"style=simple,explode=false,name=Channel-ID"`
	RequestBody *OtpVerificationRequestBody `request:"mediaType=application/json"`
	XClientKey  *string                     `header:"style=simple,explode=false,name=X-CLIENT-KEY"`
	XExternalID *string                     `header:"style=simple,explode=false,name=X-EXTERNAL-ID"`
	XSignature  *string                     `header:"style=simple,explode=false,name=X-Signature"`
	XTimestamp  *string                     `header:"style=simple,explode=false,name=X-Timestamp"`
}

func (o *OtpVerificationRequest) GetChannelID() *string {
	if o == nil {
		return nil
	}
	return o.ChannelID
}

func (o *OtpVerificationRequest) GetRequestBody() *OtpVerificationRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *OtpVerificationRequest) GetXClientKey() *string {
	if o == nil {
		return nil
	}
	return o.XClientKey
}

func (o *OtpVerificationRequest) GetXExternalID() *string {
	if o == nil {
		return nil
	}
	return o.XExternalID
}

func (o *OtpVerificationRequest) GetXSignature() *string {
	if o == nil {
		return nil
	}
	return o.XSignature
}

func (o *OtpVerificationRequest) GetXTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.XTimestamp
}

type OtpVerificationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *OtpVerificationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *OtpVerificationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *OtpVerificationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

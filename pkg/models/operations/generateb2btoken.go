// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GenerateB2bTokenRequestBodyAdditionalInfo struct {
	MerchantID *string `json:"merchantId,omitempty"`
}

func (o *GenerateB2bTokenRequestBodyAdditionalInfo) GetMerchantID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantID
}

type GenerateB2bTokenRequestBody struct {
	AdditionalInfo *GenerateB2bTokenRequestBodyAdditionalInfo `json:"additionalInfo,omitempty"`
	GrantType      *string                                    `json:"grantType,omitempty"`
}

func (o *GenerateB2bTokenRequestBody) GetAdditionalInfo() *GenerateB2bTokenRequestBodyAdditionalInfo {
	if o == nil {
		return nil
	}
	return o.AdditionalInfo
}

func (o *GenerateB2bTokenRequestBody) GetGrantType() *string {
	if o == nil {
		return nil
	}
	return o.GrantType
}

type GenerateB2bTokenRequest struct {
	RequestBody *GenerateB2bTokenRequestBody `request:"mediaType=application/json"`
	XClientKey  *string                      `header:"style=simple,explode=false,name=X-Client-Key"`
	XSignature  *string                      `header:"style=simple,explode=false,name=X-Signature"`
	XTimestamp  *string                      `header:"style=simple,explode=false,name=X-Timestamp"`
}

func (o *GenerateB2bTokenRequest) GetRequestBody() *GenerateB2bTokenRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *GenerateB2bTokenRequest) GetXClientKey() *string {
	if o == nil {
		return nil
	}
	return o.XClientKey
}

func (o *GenerateB2bTokenRequest) GetXSignature() *string {
	if o == nil {
		return nil
	}
	return o.XSignature
}

func (o *GenerateB2bTokenRequest) GetXTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.XTimestamp
}

// GenerateB2bToken200ApplicationJSON - Generate B2B token response
type GenerateB2bToken200ApplicationJSON struct {
	AccessToken     *string `json:"accessToken,omitempty"`
	ExpiresIn       *string `json:"expiresIn,omitempty"`
	ResponseCode    *string `json:"responseCode,omitempty"`
	ResponseMessage *string `json:"responseMessage,omitempty"`
	ResponseTime    *string `json:"responseTime,omitempty"`
	TokenType       *string `json:"tokenType,omitempty"`
}

func (o *GenerateB2bToken200ApplicationJSON) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *GenerateB2bToken200ApplicationJSON) GetExpiresIn() *string {
	if o == nil {
		return nil
	}
	return o.ExpiresIn
}

func (o *GenerateB2bToken200ApplicationJSON) GetResponseCode() *string {
	if o == nil {
		return nil
	}
	return o.ResponseCode
}

func (o *GenerateB2bToken200ApplicationJSON) GetResponseMessage() *string {
	if o == nil {
		return nil
	}
	return o.ResponseMessage
}

func (o *GenerateB2bToken200ApplicationJSON) GetResponseTime() *string {
	if o == nil {
		return nil
	}
	return o.ResponseTime
}

func (o *GenerateB2bToken200ApplicationJSON) GetTokenType() *string {
	if o == nil {
		return nil
	}
	return o.TokenType
}

type GenerateB2bTokenResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Generate B2B token response
	GenerateB2bToken200ApplicationJSONObject *GenerateB2bToken200ApplicationJSON
}

func (o *GenerateB2bTokenResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GenerateB2bTokenResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *GenerateB2bTokenResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GenerateB2bTokenResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GenerateB2bTokenResponse) GetGenerateB2bToken200ApplicationJSONObject() *GenerateB2bToken200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.GenerateB2bToken200ApplicationJSONObject
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AccountBindingRequestBody struct {
	AuthCode           *string `json:"authCode,omitempty"`
	MerchantID         *string `json:"merchantId,omitempty"`
	PartnerReferenceNo *string `json:"partnerReferenceNo,omitempty"`
}

func (o *AccountBindingRequestBody) GetAuthCode() *string {
	if o == nil {
		return nil
	}
	return o.AuthCode
}

func (o *AccountBindingRequestBody) GetMerchantID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantID
}

func (o *AccountBindingRequestBody) GetPartnerReferenceNo() *string {
	if o == nil {
		return nil
	}
	return o.PartnerReferenceNo
}

type AccountBindingRequest struct {
	ChannelID   *string                    `header:"style=simple,explode=false,name=Channel-ID"`
	RequestBody *AccountBindingRequestBody `request:"mediaType=application/json"`
	XClientKey  *string                    `header:"style=simple,explode=false,name=X-CLIENT-KEY"`
	XExternalID *string                    `header:"style=simple,explode=false,name=X-EXTERNAL-ID"`
	XSignature  *string                    `header:"style=simple,explode=false,name=X-Signature"`
	XTimestamp  *string                    `header:"style=simple,explode=false,name=X-Timestamp"`
}

func (o *AccountBindingRequest) GetChannelID() *string {
	if o == nil {
		return nil
	}
	return o.ChannelID
}

func (o *AccountBindingRequest) GetRequestBody() *AccountBindingRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *AccountBindingRequest) GetXClientKey() *string {
	if o == nil {
		return nil
	}
	return o.XClientKey
}

func (o *AccountBindingRequest) GetXExternalID() *string {
	if o == nil {
		return nil
	}
	return o.XExternalID
}

func (o *AccountBindingRequest) GetXSignature() *string {
	if o == nil {
		return nil
	}
	return o.XSignature
}

func (o *AccountBindingRequest) GetXTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.XTimestamp
}

type AccountBindingResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *AccountBindingResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AccountBindingResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AccountBindingResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CaptureAmount struct {
	Currency *string `json:"currency,omitempty"`
	Value    *string `json:"value,omitempty"`
}

func (o *CaptureAmount) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *CaptureAmount) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

type AuthCaptureWithdrawRequestBody struct {
	AccountToken               *string        `json:"accountToken,omitempty"`
	CaptureAmount              *CaptureAmount `json:"captureAmount,omitempty"`
	MerchantID                 *string        `json:"merchantId,omitempty"`
	OriginalPartnerReferenceNo *string        `json:"originalPartnerReferenceNo,omitempty"`
	OriginalReferenceNo        *string        `json:"originalReferenceNo,omitempty"`
	PartnerCaptureNo           *string        `json:"partnerCaptureNo,omitempty"`
	PublicUserID               *string        `json:"publicUserId,omitempty"`
	Title                      *string        `json:"title,omitempty"`
}

func (o *AuthCaptureWithdrawRequestBody) GetAccountToken() *string {
	if o == nil {
		return nil
	}
	return o.AccountToken
}

func (o *AuthCaptureWithdrawRequestBody) GetCaptureAmount() *CaptureAmount {
	if o == nil {
		return nil
	}
	return o.CaptureAmount
}

func (o *AuthCaptureWithdrawRequestBody) GetMerchantID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantID
}

func (o *AuthCaptureWithdrawRequestBody) GetOriginalPartnerReferenceNo() *string {
	if o == nil {
		return nil
	}
	return o.OriginalPartnerReferenceNo
}

func (o *AuthCaptureWithdrawRequestBody) GetOriginalReferenceNo() *string {
	if o == nil {
		return nil
	}
	return o.OriginalReferenceNo
}

func (o *AuthCaptureWithdrawRequestBody) GetPartnerCaptureNo() *string {
	if o == nil {
		return nil
	}
	return o.PartnerCaptureNo
}

func (o *AuthCaptureWithdrawRequestBody) GetPublicUserID() *string {
	if o == nil {
		return nil
	}
	return o.PublicUserID
}

func (o *AuthCaptureWithdrawRequestBody) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

type AuthCaptureWithdrawRequest struct {
	AuthorizationCustomer *string                         `header:"style=simple,explode=false,name=Authorization-Customer"`
	ChannelID             *string                         `header:"style=simple,explode=false,name=Channel-ID"`
	RequestBody           *AuthCaptureWithdrawRequestBody `request:"mediaType=application/json"`
	XClientKey            *string                         `header:"style=simple,explode=false,name=X-Client-Key"`
	XExternalID           *string                         `header:"style=simple,explode=false,name=X-EXTERNAL-ID"`
	XSignature            *string                         `header:"style=simple,explode=false,name=X-Signature"`
	XTimestamp            *string                         `header:"style=simple,explode=false,name=X-Timestamp"`
}

func (o *AuthCaptureWithdrawRequest) GetAuthorizationCustomer() *string {
	if o == nil {
		return nil
	}
	return o.AuthorizationCustomer
}

func (o *AuthCaptureWithdrawRequest) GetChannelID() *string {
	if o == nil {
		return nil
	}
	return o.ChannelID
}

func (o *AuthCaptureWithdrawRequest) GetRequestBody() *AuthCaptureWithdrawRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *AuthCaptureWithdrawRequest) GetXClientKey() *string {
	if o == nil {
		return nil
	}
	return o.XClientKey
}

func (o *AuthCaptureWithdrawRequest) GetXExternalID() *string {
	if o == nil {
		return nil
	}
	return o.XExternalID
}

func (o *AuthCaptureWithdrawRequest) GetXSignature() *string {
	if o == nil {
		return nil
	}
	return o.XSignature
}

func (o *AuthCaptureWithdrawRequest) GetXTimestamp() *string {
	if o == nil {
		return nil
	}
	return o.XTimestamp
}

type AuthCaptureWithdrawResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *AuthCaptureWithdrawResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AuthCaptureWithdrawResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AuthCaptureWithdrawResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
